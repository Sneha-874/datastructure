//deleting the nodes containing duplicate information
#include<stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node *next;
};
void create(struct node **ptr, int num) {
    struct node *new_node;
    new_node = (struct node*)malloc(sizeof(struct node));
    new_node->data = num;
    new_node->next = NULL;

    if (*ptr == NULL) {
        *ptr = new_node;
    } else {
        struct node *temp = *ptr;
        while (temp->next != NULL) {
            temp = temp->next;
        }
        temp->next = new_node;
    }
}
void deleteDuplicate(struct node *start) {
    struct node *current = start;
    struct node *checker, *temp;

    while (current != NULL && current->next != NULL) {
        checker = current;

        while (checker->next != NULL) {
            if (current->data == checker->next->data) {
                temp = checker->next;
                checker->next = checker->next->next;
                free(temp);
            } else {
                checker = checker->next;
            }
        }
        current = current->next;
    }
}

void display(struct node *ptr){
    while(ptr!=NULL){
        printf("%d\t" , ptr->data);
        ptr = ptr->next;
    }
}
int main()
{
    struct node *start = NULL; 
    create(&start, 30);
    create(&start, 60);
    create(&start, 30);
    create(&start, 90);
    create(&start, 60);
    create(&start, 120);
    printf("Original linked list:-\n");
    display(start);
    struct node *ptr;
    ptr=(struct node*)malloc(sizeof(struct node));
    ptr = start;
    printf("Linked list after deletion of duplicate nodes:-\n");
    deleteDuplicate(start);
    display(ptr);
        return 0;
}
Output:-
Original linked list:-
30      60      30      90      60    120
Linked list after deletion of duplicate nodes:-
30      60      90      120
PS D:\c program\Data Structure>
