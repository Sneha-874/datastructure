
#include<stdio.h>
#include<stdlib.h>
struct Queue
{
    int size;
    int front;
    int rear;
    int *arr;
};
int isFull(struct Queue *q){
    if(q->rear == q->size-1){
        return 1;
    }
    return 0;
}
int isEmpty(struct Queue *q){
    if(q->rear == q->front){
        return 1;
    }
    return 0;
}
void enqueue(struct Queue *q , int val){
    if(isFull(q)){
        printf("The queue is full\n");
    }
    else{
        q->rear++;
        q->arr[q->rear] = val;
    }
}
int dequeue(struct Queue *q){
    int a=-1;
    if(isEmpty(q)){
        printf("The queue is empty\n");
    }
    else{
        q->front++;
        a = q->arr[q->front];
    }
    return a;
}
void displayQueue(struct Queue *q){
    for (int i = q->front + 1; i <= q->rear; ++i)
        {
            printf("%d ", q->arr[i]);
        }
}
int main()
{
    struct Queue q;
    q.size = 10;
    q.front = q.rear = -1;
    q.arr = (int *)malloc(q.size * sizeof(int));
    enqueue(&q , 12);
    enqueue(&q , 24);
    enqueue(&q , 32);
    enqueue(&q , 25);
    printf("Queue elements before dequeue: ");
    displayQueue(&q);
    dequeue(&q);
    printf("\nQueue elements after dequeue: ");
    displayQueue(&q);
    return 0;
}
Output:
Queue elements before dequeue: 12 24 32 25 
Queue elements after dequeue: 24 32 25
